package proto;

enum Room_Type
{
	chuji =1;
	zhongji =2;
	gaoji =3;
	bisai_dizhu=4;
}
enum Play_Data_Type
{
    jiaodizhu =1;
    qiangdizhu =2;
    pai =3;
}
enum Message_Id
{
	CS_Join_Id =1;
	SC_Join_Id =2;
	CS_Quit_Join_Id =3;
	SC_Quit_Join_Id =4;
	SC_Init_Room_Id =5;
	SC_Init_Cards_Id =6;
	SC_Bottom_Cards_Id =7;
	CS_Play_Id =8;
	SC_Play_Id =9;
	CS_Go_Out_Id =10;
	SC_Go_Out_Id =11;
	CS_Is_Gaming_Id =12;
	SC_Is_Gaming_Id =13;
	SC_Game_Result_Id =14;
	CS_Competition_SignUp_Id = 15;    //竞技报名ID
    SC_Competition_SignUp_Id = 16;    //
    SC_ComPetition_Start_Id = 17;     //竞技开始ID
    CS_ComPetition_Group_Id = 18;     //请求竞技组信息
    SC_ComPetition_Group_Id = 19;
	CS_Tuo_Guan_Id = 20;     //请求竞技组信息
	SC_Tuo_Guan_Id = 21;
	CS_Robot_Join_Id = 22;      //Robot匹配
	SC_Competition_Result_Id = 23;      //竞技结果
	CS_ComPetition_Join_Id = 24;    //进入竞赛
	CS_CreateCardRoom_Id = 25;
    SC_CreateCardRoom_Id = 26;
    SC_RoomInfoTable_Id = 27;
    SC_JoinTheRoom_Id = 28; //加入房间
    CS_JoinTheRoom_Id =29;   //返回加入结果

}


message CS_ComPetition_SignUp
{
    optional int32 competition_id = 1;
    optional uint64 user_id       = 2;
    optional Room_Type game_type  = 3;
}
message SC_ComPetition_SignUp
{
    optional int32 bCompetition   = 1;
}
message SC_ComPetition_Start
{
    optional int32 competition_id   = 1;
    optional Room_Type game_type    = 2;
}

message ComPetition
{
    optional int32  competition_id  = 1;
    optional Room_Type  type        = 2;
    optional int32      number      = 3;
    optional string starttime       = 4;
}
message CS_ComPetition_Group
{
}
message SC_ComPetition_Group
{
    repeated ComPetition    group   = 1;
}
message CS_Join
{
	optional Room_Type type = 1;
}
message SC_Join
{
	optional Room_Type type = 1;
}
message CS_Quit_Join
{
	optional Room_Type type = 1;
}
message SC_Quit_Join
{
	optional Room_Type type = 1;
}
message Play_Data
{
	optional Play_Data_Type type =  1;
	optional string data =  2;
}
message Player_Info
{
	optional int32 playerId =  1;
	optional string name =  2;
	optional string touxiang =  3;
	optional int32 gold = 4;
	optional int32 level =5;
	optional int32 Cards_count =  6;
	optional bool tuo_guan =  7;
}
message Player_Order
{
	repeated int32 id = 1;
}
message SC_Init_Room
{
	optional Room_Type type =  1;
    optional int32 times = 2;
    optional int32 dizhu =  3;
    optional int64 gameStartTime = 4;
	optional Play_Data currentValue=5;
	optional string bottomCards =6;
	optional Player_Order playerOrder = 7;
	optional int32 turnerId =8;
	optional int32 turnerLeftTime=9;
	optional int32 currentValueOwner=10;
	repeated Player_Info playersInfo=11;
	optional string historyCards=12;
}
message SC_Init_Cards
{
	optional string cards= 1;
}
message SC_Bottom_Cards
{
	optional string cards= 1;
	optional int32 owner = 2;
}
message CS_Play
{
	optional Play_Data play_data=1;
}
message SC_Play
{
    optional int32 playerId = 1;
	optional Play_Data play_data = 2;
}

message CS_Go_Out
{
	optional int32 type = 1;
}
message SC_Go_Out
{
	optional int32 type = 1;
}
message CS_Is_Gaming
{
	optional int32 data = 1;
}
message SC_Is_Gaming
{
	optional int32 data = 1;
}
message Player_Game_Result
{
	optional int32 playerId = 1;
	repeated int32 levelUp = 2;
	optional int32 gold = 3;
	optional string unPlayCards = 4;
	message Lian_Sheng
	{
		optional int32 count = 1;//连胜次数
		optional int32 base_BU = 2;//胜利BU奖励
		optional int32 extra_BU = 3;//额外BU奖励
		message Goods
		{
			optional int32 id=1;
			optional int32 count=2;
		}
		repeated Goods extra_goods=4;
	}
	optional Lian_Sheng lianSheng = 5;
	//得分加倍
}
message SC_Game_Result
{
	repeated Player_Game_Result player_game_result=1; 
}
message CS_Tuo_Guan
{
	optional bool data = 1;//是否托管
}
message SC_Tuo_Guan
{
	optional int32 playerId = 1;
	optional bool data = 2;//是否托管
}
message CS_Robot_Join
{
	optional int32 playerId = 1;
}
message SC_Competition_Result
{
    optional int32  Competition_id  = 1;
    message Competition_end
    {
        optional int32  playerId    = 1;
        repeated int32  levelUp     = 2;    //赛制
        optional bool   to_up       = 3;    //晋级
        message gold
        {
            optional int32  id      = 1;
            optional int32  number  = 2;
        }
        repeated gold  golds        = 4;    //奖励
    }
	optional Competition_end    competition = 2;
	optional string              top_list    = 3;
    optional bool               over        = 4;    //所有比赛结束
}
message CS_ComPetition_Join
{
    optional int32  Competition_id  = 1;
    optional int32  playerId        = 2;
}
//创建房间
message CS_CreateCardRoom
{
     optional int32 playerid = 1;              //玩家ID
     optional int32 roomType = 2;          //1地主or2麻将
     optional int32 gameType = 3;          //1晋级赛or 2积分赛
     optional int32 players = 4;               //比赛人数
     optional int32 numberOfGames = 5;   //比赛局数
     repeated TimeInfo signUpTime = 6;          //报名时间 2019|1|1|0|0  年月日时分
     repeated TimeInfo beginningTime = 7;     //开始时间  2019|1|1|0|10  年月日时分
     optional string roomName = 8;          //房间名称，玩家自己输入
     optional string roomExplain = 9;        //比赛描述，玩家输入
}
//创建房间结果
message SC_CreateCardRoom
{
    optional int32 result = 1;      //0失败   1成功
    optional RoomInfoTable roomInfo = 2;
}
//房间列表信息
message SC_RoomInfoTable
{
     repeated RoomInfoTable roomInfo = 1;
}
//房间信息
message RoomInfoTable
{
    optional string roomId = 1;        //房间id
    optional string gameText = 2;     //地主or 麻将
    optional string nameText = 3;    //房间名称
    optional string typeText = 4;         //晋级赛or积分赛
    optional int32 playerNum = 5;      //在线人数
    repeated TimeInfo signUpTime = 6;    //报名时间
    repeated TimeInfo beginningTime = 7;   //开始时间
    optional string gameState = 8;         //游戏状态
}
//时间信息
message TimeInfo
{
   optional int32 year = 1;
   optional int32 month = 2;
   optional int32 day = 3;
   optional int32 hour = 4;
   optional int32 minute = 5;
}

//加入房间
message SC_JoinTheRoom
{
    optional int32 playerid = 1;     //玩家ID
    optional int32 roomId = 2;  	 //房间ID
}

//加入房间返回
message CS_JoinTheRoom
{
     optional int32 result = 1;     //加入房间结果 0失败 1成功
}

